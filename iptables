ssh <username>@<server ip> [-i <path to id_rsa>] - подключиться к серверу через ssh (22 порт) c именем username, используя
приватный сертификат по пути <path to id_rsa>

sudo -s - переключиться на суперюзера
su <username> - переулючиться на пользователя username
iptables -L <имя Цепочки> - просмотр текущей конфигурации

Действия: 
ACCEPT - принимать 
DROP - отклонить без обьяснения причина 
REJECT - отклонить с объяснением
QUEUE - отправить в очередь на обработку другим ПО

---------Сброс настроек цепочки-------------------------------------------------------------------
iptables -P <имя цепочки> <действие> (iptables -P INPUT ACCEPT) - установить действие по умолчанию
iptables -F <имя цепочки> - сброс настроек цепочки
-------------------------------------------------------------------------

iptables -vL --line-numbers - отобразить более полную информацию о конфигурации (-v) с номерами правил (--line-numbers) 
, доп опция -n предотвращает попытку DNS lookup 
iptables -N <имя цепочки> - создать цепочку с именем <имя цепочки>
iptables [-A -D -I] <имя цепочки> -p [tcp udp] --dport [22 ssh http] -j <действие> (iptables -A INPUT -p tcp --dport ssh -j ACCEPT)
-A - добавить правило
-D - удалить -\\-
-I - вставить -\\-
-p - указание протокола
--dport - указание порта назначения
-j - совершить действие 

iptables -A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
Устанавливает правило ACCEPT по отношению к пакетам, связанным с пакетами уже установленных соединений и к 
пакетам установленных соединений
RELATED - пакеты нового соединения, связанные с уже установленными
ESTABLISHED - пакеты уже установленных соединений

iptables -A INPUT -i lo -j ACCEPT - принимать пакеты с интерфейса lo (localhost)
iptables -A INPUT -m conntrack --ctstate INVALID -j DROP - блокировать плохие пакеты
iptables -A INPUT -p 41 -j ACCEPT - обрабатывать пакеты INTERNET CONTROL MESSAGE PROTOCOL (ICMP) - ping, traceroute
iptables -A INPUT -p icmp --icmp-type 8 -m conntrack --ctstate NEW -j ACCEPT - Принимать новые соединения только для ECHO запросов (ping)
iptables -A INPUT -p udp -m conntrack --ctstate NEW -j UDP  - отправить все пакеты нового соединения по udp в цепь UDP
iptables -A INPUT -p tcp --syn -m conntrack --ctstate NEW -j TCP - отправить все пакеты нового соединения по tcp в цепь TCP
iptables -A INPUT -p udp -j REJECT --reject-with icmp-port-unreachable - в цепочке udp реджектить все пакеты с сообщением port unreachable
iptables -A INPUT -p tcp -j REJECT --reject-with tcp-reset - в цепочке tcp реджектить все пакеты "connection reset"
iptables -A INPUT -j REJECT --reject-with icmp-proto-unreachable - реджектим все пакеты, поступающие с использованием других транспортных протоколов с сообщением protocol unreachable
iptables -A TCP -p tcp --dport ssh -j ACCEPT - добавляем в цепочку TCP правило для разрешения ssh пакетов

порты 22 - ssh ; 80 - http ; 443 - https ; 53 - DNS ; 25 - mail SMTP

iptables -A TCP -p tcp --dport http -j ACCEPT \
iptables -A TCP -p tcp --dport https -j ACCEPT \
iptables -A TCP -p tcp --dport 53 -j ACCEPT \
iptables -A UDP -p udp --dport 53 -j ACCEPT

--- Защита от спуфинга -----
iptables -t raw -I PREROUTING -m rpfilter --invert -j DROP - запретить запросы, содержащие локальный адрес отправителя
такие запросы обычно подразумевают spoofing
--- Защита от сканирования SYN ----
 iptables -I TCP -p tcp -m recent --update --rsource --seconds 60 --name TCP-PORTSCAN -j REJECT --reject-with tcp-reset
 - отклонить пакет с сообщением connection reset если хост, отправляюший пакет находился в списке TCP-PORTSCAN в течение последних 60 секунд
iptables -D INPUT -p tcp -j REJECT --reject-with tcp-reset
iptables -A INPUT -p tcp -m recent --set --rsource --name TCP-PORTSCAN -j REJECT --reject-with tcp-reset
- Добавлять хосты с реджектнутыми пакетами в список TCP-PORTSCAN

--- Загрузка параметров iptables при перезапуске ----
sudo iptables-restore /etc/iptables/rules.v4

// Разрешить отправку пакетов на порт 7922(другой порт для ssh)
iptables -A TCP -p tcp --dport 7922 -j ACCEPT